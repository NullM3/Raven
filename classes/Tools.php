<?php

    class Tools {
        #------[ARRAY RAND]------#
        static public function RanArray($array){
            $arr = $array[array_rand($array)];
            return $arr;
            
        }

        #------[Get Tokens]------#
        static public function GetToken($p,$l,$t) {
            return explode($t,explode($l,$p)[1])[0];
        }


        #------[Delete Spaces]------#
        static public function DeleteSpaces($input) {
            $result = preg_replace('/\s\s+/', ' ', $input);
            if ($result[0] == ' ') {
                $result = substr($result, 1);
            } $quir = substr($result, -1);
            if ($quir == ' ') {
                $result = substr($result, 0, -1);
            }
            return $result;
        }

        #------[Multi Explode]------#
        static public function multiexplode($delimiters, $string) {
            $ready = str_replace($delimiters, $delimiters[0], $string);
            $launch = explode($delimiters[0], $ready);
            return  $launch;
        }

        #------[Get Flag]------#
        static public function GetFlag($code) {
            $flags = ['AD' => 'üá¶üá©', 'AE' => 'üá¶üá™', 'AF' => 'üá¶üá´', 'AG' => 'üá¶üá¨', 'AI' => 'üá¶üáÆ', 'AL' => 'üá¶üá±', 'AM' => 'üá¶üá≤', 'AO' => 'üá¶üá¥', 'AQ' => 'üá¶üá∂', 'AR' => 'üá¶üá∑', 'AS' => 'üá¶üá∏', 'AT' => 'üá¶üáπ', 'AU' => 'üá¶üá∫', 'AW' => 'üá¶üáº', 'AX' => 'üá¶üáΩ', 'AZ' => 'üá¶üáø', 'BA' => 'üáßüá¶', 'BB' => 'üáßüáß', 'BD' => 'üáßüá©', 'BE' => 'üáßüá™', 'BG' => 'üáßüá¨', 'BH' => 'üáßüá≠', 'BI' => 'üáßüáÆ', 'BJ' => 'üáßüáØ', 'BL' => 'üáßüá±', 'BF' => 'üáßüá´', 'BM' => 'üáßüá≤', 'BN' => 'üáßüá≥', 'BO' => 'üáßüá¥', 'BQ' => 'üáßüá∂', 'BR' => 'üáßüá∑', 'BS' => 'üáßüá∏', 'BT' => 'üáßüáπ', 'BV' => 'üáßüáª', 'BW' => 'üáßüáº', 'BY' => 'üáßüáæ', 'BZ' => 'üáßüáø', 'CA' => 'üá®üá¶', 'CC' => 'üá®üá®', 'CD' => 'üá®üá©', 'CF' => 'üá®üá´', 'CG' => 'üá®üá¨', 'CH' => 'üá®üá≠', 'CI' => 'üá®üáÆ', 'CK' => 'üá®üá∞', 'CL' => 'üá®üá±', 'CM' => 'üá®üá≤', 'CN' => 'üá®üá≥', 'CO' => 'üá®üá¥', 'CR' => 'üá®üá∑', 'CU' => 'üá®üá∫', 'CV' => 'üá®üáª', 'CW' => 'üá®üáº', 'CX' => 'üá®üáΩ', 'CY' => 'üá®üáæ', 'CZ' => 'üá®üáø', 'DE' => 'üá©üá™', 'DJ' => 'üá©üáØ', 'DK' => 'üá©üá∞', 'DM' => 'üá©üá≤', 'DO' => 'üá©üá¥', 'DZ' => 'üá©üáø', 'EC' => 'üá™üá®', 'EE' => 'üá™üá™', 'EG' => 'üá™üá¨', 'EH' => 'üá™üá≠', 'ER' => 'üá™üá∑', 'ES' => 'üá™üá∏', 'ET' => 'üá™üáπ', 'FI' => 'üá´üáÆ', 'FJ' => 'üá´üáØ', 'FK' => 'üá´üá∞', 'FM' => 'üá´üá≤', 'FO' => 'üá´üá¥', 'FR' => 'üá´üá∑', 'GA' => 'üá¨üá¶', 'GB' => 'üá¨üáß', 'GD' => 'üá¨üá©', 'GE' => 'üá¨üá™', 'GF' => 'üá¨üá´', 'GG' => 'üá¨üá¨', 'GH' => 'üá¨üá≠', 'GI' => 'üá¨üáÆ', 'GL' => 'üá¨üá±', 'GM' => 'üá¨üá≤', 'GN' => 'üá¨üá≥', 'GP' => 'üá¨üáµ', 'GQ' => 'üá¨üá∂', 'GR' => 'üá¨üá∑', 'GS' => 'üá¨üá∏', 'GT' => 'üá¨üáπ', 'GU' => 'üá¨üá∫', 'GW' => 'üá¨üáº', 'GY' => 'üá¨üáæ', 'HK' => 'üá≠üá∞', 'HM' => 'üá≠üá≤', 'HN' => 'üá≠üá≥', 'HR' => 'üá≠üá∑', 'HT' => 'üá≠üáπ', 'HU' => 'üá≠üá∫', 'ID' => 'üáÆüá©', 'IE' => 'üáÆüá™', 'IL' => 'üáÆüá±', 'IM' => 'üáÆüá≤', 'IN' => 'üáÆüá≥', 'IO' => 'üáÆüá¥', 'IQ' => 'üáÆüá∂', 'IR' => 'üáÆüá∑', 'IS' => 'üáÆüá∏', 'IT' => 'üáÆüáπ', 'JE' => 'üáØüá™', 'JM' => 'üáØüá≤', 'JO' => 'üáØüá¥', 'JP' => 'üáØüáµ', 'KE' => 'üá∞üá™', 'KG' => 'üá∞üá¨', 'KH' => 'üá∞üá≠', 'KI' => 'üá∞üáÆ', 'KM' => 'üá∞üá≤', 'KN' => 'üá∞üá≥', 'KP' => 'üá∞üáµ', 'KR' => 'üá∞üá∑', 'KW' => 'üá∞üáº', 'KY' => 'üá∞üáæ', 'KZ' => 'üá∞üáø', 'LA' => 'üá±üá¶', 'LB' => 'üá±üáß', 'LC' => 'üá±üá®', 'LI' => 'üá±üáÆ', 'LK' => 'üá±üá∞', 'LR' => 'üá±üá∑', 'LS' => 'üá±üá∏', 'LT' => 'üá±üáπ', 'LU' => 'üá±üá∫', 'LV' => 'üá±üáª', 'LY' => 'üá±üáæ', 'MA' => 'üá≤üá¶', 'MC' => 'üá≤üá®', 'MD' => 'üá≤üá©', 'ME' => 'üá≤üá™', 'MF' => 'üá≤üá´', 'MG' => 'üá≤üá¨', 'MH' => 'üá≤üá≠', 'MK' => 'üá≤üá∞', 'ML' => 'üá≤üá±', 'MM' => 'üá≤üá≤', 'MN' => 'üá≤üá≥', 'MO' => 'üá≤üá¥', 'MP' => 'üá≤üáµ', 'MQ' => 'üá≤üá∂', 'MR' => 'üá≤üá∑', 'MS' => 'üá≤üá∏', 'MT' => 'üá≤üáπ', 'MU' => 'üá≤üá∫', 'MV' => 'üá≤üáª', 'MW' => 'üá≤üáº', 'MX' => 'üá≤üáΩ', 'MY' => 'üá≤üáæ', 'MZ' => 'üá≤üáø', 'NA' => 'üá≥üá¶', 'NC' => 'üá≥üá®', 'NE' => 'üá≥üá™', 'NF' => 'üá≥üá´', 'NG' => 'üá≥üá¨', 'NI' => 'üá≥üáÆ', 'NL' => 'üá≥üá±', 'NO' => 'üá≥üá¥', 'NP' => 'üá≥üáµ', 'NR' => 'üá≥üá∑', 'NU' => 'üá≥üá∫', 'NZ' => 'üá≥üáø', 'OM' => 'üá¥üá≤', 'PA' => 'üáµüá¶', 'PE' => 'üáµüá™', 'PF' => 'üáµüá´', 'PG' => 'üáµüá¨', 'PH' => 'üáµüá≠', 'PK' => 'üáµüá∞', 'PL' => 'üáµüá±', 'PM' => 'üáµüá≤', 'PN' => 'üáµüá≥', 'PR' => 'üáµüá∑', 'PS' => 'üáµüá∏', 'PT' => 'üáµüáπ', 'PW' => 'üáµüáº', 'PY' => 'üáµüáæ', 'QA' => 'üá∂üá¶', 'RE' => 'üá∑üá™', 'RO' => 'üá∑üá¥', 'RS' => 'üá∑üá∏', 'RU' => 'üá∑üá∫', 'RW' => 'üá∑üáº', 'SA' => 'üá∏üá¶', 'SB' => 'üá∏üáß', 'SC' => 'üá∏üá®', 'SD' => 'üá∏üá©', 'SE' => 'üá∏üá™', 'SG' => 'üá∏üá¨', 'SH' => 'üá∏üá≠', 'SI' => 'üá∏üáÆ', 'SJ' => 'üá∏üáØ', 'SK' => 'üá∏üá∞', 'SL' => 'üá∏üá±', 'SM' => 'üá∏üá≤', 'SN' => 'üá∏üá≥', 'SO' => 'üá∏üá¥', 'SR' => 'üá∏üá∑', 'SS' => 'üá∏üá∏', 'ST' => 'üá∏üáπ', 'SV' => 'üá∏üáª', 'SX' => 'üá∏üáΩ', 'SY' => 'üá∏üáæ', 'SZ' => 'üá∏üáø', 'TC' => 'üáπüá®', 'TD' => 'üáπüá©', 'TF' => 'üáπüá´', 'TG' => 'üáπüá¨', 'TH' => 'üáπüá≠', 'TJ' => 'üáπüáØ', 'TK' => 'üáπüá∞', 'TL' => 'üáπüá±', 'TM' => 'üáπüá≤', 'TN' => 'üáπüá≥', 'TO' => 'üáπüá¥', 'TR' => 'üáπüá∑', 'TT' => 'üáπüáπ', 'TV' => 'üáπüáª', 'TW' => 'üáπüáº', 'TZ' => 'üáπüáø', 'UA' => 'üá∫üá¶', 'UG' => 'üá∫üá¨', 'UM' => 'üá∫üá≤', 'US' => 'üá∫üá∏', 'UY' => 'üá∫üáæ', 'UZ' => 'üá∫üáø', 'VA' => 'üáªüá¶', 'VC' => 'üáªüá®', 'VE' => 'üáªüá™', 'VG' => 'üáªüá¨', 'VI' => 'üáªüáÆ', 'VN' => 'üáªüá≥', 'VU' => 'üáªüá∫', 'WF' => 'üáºüá´', 'WS' => 'üáºüá∏', 'XK' => 'üáΩüá∞', 'YE' => 'üáæüá™', 'YT' => 'üáæüáπ', 'ZA' => 'üáøüá¶', 'ZM' => 'üáøüá≤', 'ZW' => 'üáøüáº'];
            return $flags[strtoupper($code)] ?? '‚óªÔ∏è';
        }
        
        #------[Gen MUID, SUID, STRIPE]------#
        static private function GenStripeDatas() {
            $result = sprintf('%04X%04X-%04X-%04X-%04X-%04X%04X%04X%04X%04X', mt_rand(0, 65535), mt_rand(0, 65535), mt_rand(0, 65535), mt_rand(16384, 20479), mt_rand(32768, 49151), mt_rand(0, 65535), mt_rand(0, 65535), mt_rand(0, 65535), mt_rand(0, 65535), mt_rand(0, 65535));
            $x = strtolower($result);
            $guid = substr($x, 0, 42);
            return $guid;
        }

        #------[Gen Password]------#
        static public function GenPass($lenght = 10) {
            $str = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz1234567890';
            $password = '';
            for ($i = 0; $i < $lenght; $i++) {
                $password .= substr($str, rand(0, 61), 1);
            }
            return $password;
        }

        #------[Get Random Users Data]------#
        static public function GetUser() {
            $addr = self::RanArray([
                ['NY', 'New York', '10080', 'New York'],
                ['WA', 'Washington', '98001', 'Auburn'],
                ['AL', 'Alabama', '35005', 'Adamsville'],
                ['FL', 'Florida', '32003', 'Orange Park'],
                ['CA', 'California', '90201', 'Bell']
            ]);

            $first = self::RanArray(['Johnathon', 'Anthony', 'Erasmo', 'Raleigh', 'Nancie', 'Tama', 'Camellia', 'Augustine', 'Christeen', 'Luz', 'Diego', 'Lyndia', 'Thomas', 'Georgianna', 'Leigha', 'Alejandro', 'Marquis', 'Joan', 'Stephania', 'Elroy', 'Zonia', 'Buffy', 'Sharie', 'Blythe', 'Gaylene', 'Elida', 'Randy', 'Margarete', 'Margarett', 'Dion', 'Tomi', 'Arden', 'Clora', 'Laine', 'Becki', 'Margherita', 'Bong', 'Jeanice', 'Qiana', 'Lawanda', 'Rebecka', 'Maribel', 'Tami', 'Yuri', 'Michele', 'Rubi', 'Larisa', 'Lloyd', 'Tyisha', 'Samatha']);
            $last = self::RanArray(['Mischke', 'Serna', 'Pingree', 'Mcnaught', 'Pepper', 'Schildgen', 'Mongold', 'Wrona', 'Geddes', 'Lanz', 'Fetzer', 'Schroeder', 'Block', 'Mayoral', 'Fleishman', 'Roberie', 'Latson', 'Lupo', 'Motsinger', 'Drews', 'Coby', 'Redner', 'Culton', 'Howe', 'Stoval', 'Michaud', 'Mote', 'Menjivar', 'Wiers', 'Paris', 'Grisby', 'Noren', 'Damron', 'Kazmierczak', 'Haslett', 'Guillemette', 'Buresh', 'Center', 'Kucera', 'Catt', 'Badon', 'Grumbles', 'Antes', 'Byron', 'Volkman', 'Klemp', 'Pekar', 'Pecora', 'Schewe', 'Ramage']);

            return (object) [
                // Info
                'title' => self::RanArray(['Mr', 'Ms']),
                'first' => ucfirst($first),
                'last' => ucfirst($last),
                // Address
                'street' => self::RanArray(['Street '.rand(1, 232).' st', ''.rand(0000, 9999).' Main Street']),
                'city' => $addr[3],
                'state' => $addr[1],
                'state_code' => $addr[0],
                'zip' => $addr[2],
                // Contact
                'email' => ''.$first.''.$last.''.rand(10, 100).'@'.self::RanArray(['gmail.com', 'hotmail.com', 'outlook.com','aol.com']),
                'phone' => self::RanArray(["682", "346", "246"]).rand(0000000, 9999999),
                // Online
                'user' => ucfirst($first.'x'.rand(10, 1000)),
                'pass' => self::GenPass(),
                'ip' => rand(132, 255).'.'.rand(1,255).'.'.rand(1, 255).'.'.rand(10, 145),
                'guid' => self::GenStripeDatas(),
                'muid' => self::GenStripeDatas(),
                'sid' => self::GenStripeDatas()
            ];
        }

        static public function TypeCC($type) {
            
            $type = substr($type, 0, 1);

            if ($type == '3') {
                $type_cc = 'amex';
        
            } elseif ($type == '4') {
                $type_cc = 'visa';
        
            } elseif ($type == '5') {
                $type_cc = 'mastercard';
        
            } elseif ($type == '6') {
                $type_cc = 'discover';
            }

            return $type_cc;
        }

    }